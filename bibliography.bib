@book{linthicum2000enterprise,
	title={Enterprise application integration},
	author={Linthicum, David S},
	year={2000},
}

@article{Hohpe2004,
	author = {Gregor Hohpe and Bobby Woolf},
	isbn = {978-0321200686},
	journal = {Addison-Wesley Professional; 1 edition},
	publisher = {Addison-Wesley Longman Publishing Co., Inc.},
	year = {2003},
	pages = {736},
	title = {Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions: Hohpe, Gregor, Woolf, Bobby: 9780321200686: Amazon.com: Books},
	url = {https://books.google.com.cu/books?hl=es&lr=&id=bUlsAQAAQBAJ&oi=fnd&pg=PR7&dq=HOHPE,+G.+AND+WOOLF,+B.+Enterprise+Integration+Patterns:+Designing,+Building,+and+Deploying+Messaging+Solutions.+edited+by+I.+PEARSON+EDUCATION.+Edtion+ed.+Boston,+MA,+USA:+Addis},
	year = {2004},
}
@article{Ruh2001,
	abstract = {A much-needed guide to dealing with one of today's most important enterprise computing issues Enterprise Application Integration (EAI) refers to one of today's most crucial IT challenges - getting the vast array of disparate business applications found in most large companies to work together. Written by the experts at the leading international EAI consulting firm of Concept5, this is a concise introduction to EAI concepts and strategies for IT managers, systems architects, software developers, and all those charged with heading up their companies' EAI initiatives. The Business Drivers of EAI -- EAI -- EAI Enables Critical New Solutions -- Improving Customer Relationships -- Improving Supply-Chain Relationships -- Improving Internal Processes -- Reducing Time to Market -- The Value of Legacy and Packaged Applications -- The Web -- Barriers to Effective EAI -- Chaotic Architectures -- Skill Shortages -- Security Issues -- Types of Integration -- Integration Models -- Integration and Coupling -- Presentation Integration Model -- When to Use It -- Pros and Cons -- The Data Integration Model -- When to Use It -- Pros and Cons -- Functional Integration Model -- The Breadth of Functional Integration -- Comparing and Contrasting the Three Approaches -- When to Use It -- Pros and Cons -- Basic Building Blocks -- The Communications Model -- Synchronous Communication -- Asynchronous Communication -- Methods of Integration -- Messaging -- Interface Definition -- Connectors -- Middleware Choices -- Remote Procedure Calls -- Database Access Middleware -- Message Oriented Middleware -- Distributed Object Technology -- Transaction Processing Monitors -- EAI and Middleware -- Service Building Blocks -- Messaging Architecture and Solutions -- Message Queuing -- Request/Reply -- Publish/Subscribe Messaging -- Message Translation -- Multiple Queuing and Routing -- Message Queuing Products -- Middleware: The Message Is the Medium -- Messaging Example: MegaMoney Bancorp -- The Bank -- EAI Goals -- The Solution -- Object Architecture and Solutions -- Distributed Architecture Frameworks.},
	author = {William A. Ruh and Francis X. Maginnis and William J. Brown},
	isbn = {0471376418},
	pages = {211},
	publisher = {John Wiley},
	title = {Enterprise application integration : a Wiley tech brief},
	year = {2001},
}

@article{Johannesson2001,
	author = {Paul Johannesson and Erik Perjons},
	doi = {10.1016/S0306-4379(01)00015-1},
	issn = {03064379},
	issue = {3},
	journal = {Information Systems},
	title = {Design principles for process modelling in enterprise application integration},
	volume = {26},
	year = {2001},
}
@online{mordorintelligence,
	author = {Mordorintelligence},
	title = {Enterprise Application Integration Market: Growth, Trends, Forecasts (2020 - 2025)},
	url = {https://www.mordorintelligence.com/industry-reports/enterprise-application-integration-market},
	year={2020},
	urldate = {2020-05-11}
}

@article{pezzini2020magic,
	title={Magic quadrant for enterprise integration platform as a service},
	author={Guttridge, Keith and Pezzini, Massimo and Golluscio, Elizabeth and Thoo, Eric and Iijima, Kimihiko and Wilcox, Mary},
	journal={Gartner research ID G},
	year={2020}

}

@online{Parquet,
   author = {Apache Software Foundation},
   title = {Apache Parquet},
   url = {https://parquet.apache.org/},
   year = {2023},
   urldate = {2023-08-11}
}


@article{Ritter2017,
   abstract = {The discipline of enterprise application integration (EAI) enables the decoupled communication between (business) applications, and thus became a cornerstone of today's IT architectures. In 2004, the book by Hohpe and Woolf on Enterprise Integration Patterns (EIP) provided a fundamental collection of messaging patterns, denoting the building blocks of many EAI system implementations. Since then, multiple new trends and a broad range of new application scenarios have emerged, e. g., cloud and mobile computing, multimedia streams. These developments ultimately lead to conceptual changes and challenges such as larger data volumes (i. e., message sizes), a growing number of messages (i. e., velocity) and communication partners, and even more diverse message formats (i. e., variety). However, the research since 2004 focused on isolated EAI solutions, and thus a broader and integrated analysis of solutions and new patterns is missing. In this survey, we summarize new trends and application scenarios which serve as a frame to structure our survey of academic research on EIP, existing systems for EAI and also to classify integration patterns from these sources. We evaluate recently developed integration solutions and patterns in the context of real-world integration scenarios. Finally, we derive and summarize remaining challenges and open research questions.},
   author = {Daniel Ritter and Norman May and Stefanie Rinderle-Ma},
   doi = {10.1016/J.IS.2017.03.003},
   issn = {0306-4379},
   journal = {Information Systems},
   keywords = {Cloud integration,Device integration,Enterprise application integration,Enterprise integration patterns,Hybrid integration},
   pages = {36-57},
   publisher = {Pergamon},
   title = {Patterns for emerging application integration scenarios: A survey},
   volume = {67},
   year = {2017},
}


@article{Zimmermann2016,
   author = {Olaf Zimmermann and Cesare Pautasso and Gregor Hohpe and Bobby Woolf},
   doi = {10.1109/MS.2016.11},
   issn = {07407459},
   issue = {1},
   journal = {IEEE Software},
   pages = {13-19},
   publisher = {IEEE Computer Society},
   title = {A decade of enterprise integration patterns: A conversation with the authors},
   volume = {33},
   year = {2016},
}


@article{Freire2019,
   abstract = {Companies are taking advantage of cloud computing to upgrade their business processes. Cloud computing requires interaction with many kinds of applications, so it is necessary to improve the performance of software tools that allow keeping information on all these applications consistent and synchronised. Integration platforms are specialised software tools that provide support to design, implement, run, and monitor integration solutions, which aim to orchestrate a set of applications so as to promote compatibility among their data or to develop new functionality on top of the current ones. The run-time system is the part of the integration platform responsible for running the integration solutions, which makes its performance the uttermost important issue. The contribution of this article is two-fold: a framework and an evaluation of integration platforms. The former is a framework composed of ten properties grouped into two dimensions to evaluate the run-time systems focusing on performance. Using this framework as reference, the second contribution is an evaluation of nine open-source integration platforms, which represent the state-of-the-art, provide support to the integration patterns, and follow the pipes-and-filters architectural style. In addition, as a result of this work, we suggest open research directions that can be explored to improve the performance of the run-time systems and at the same time may be useful to adapt them to the context of cloud computing.},
   author = {Daniela L. Freire and Rafael Z. Frantz and Fabricia Roos-Frantz and Sandro Sawicki},
   doi = {10.1002/SPE.2670},
   issn = {1097-024X},
   issue = {3},
   journal = {Software: Practice and Experience},
   keywords = {cloud computing,enterprise application integration,integration patterns,integration platform,run,time system},
   pages = {341-360},
   publisher = {John Wiley & Sons, Ltd},
   title = {Survey on the run-time systems of enterprise application integration platforms focusing on performance},
   volume = {49},
   year = {2019},
}


@online{EnterpriseIntegration,
   author = {Gregor Hohpe},
   title = {Enterprise Integration Patterns},
   year = {2024},
   urldate = {2024-01-26},
   url = {https://www.enterpriseintegrationpatterns.com}
}


@online{RedHatJboss,
   author = {Red Hat},
   title = {4.4. Pipes and Filters Red Hat JBoss Fuse 6.0, Red Hat Customer Portal},
   url = {https://access.redhat.com/documentation/en-us/red_hat_jboss_fuse/6.0/html/implementing_enterprise_integration_patterns/msgsys-pipes},
   year = {2024},
   urldate = {2024-02-02}
}

@online{MulesoftPat,
   author = {Mulesoft},
   title = {Enterprise Integration Patterns Using Mule, MuleSoft Documentation},
   url = {https://docs.mulesoft.com/mule-runtime/latest/understanding-enterprise-integration-patterns-using-mule},
   year = {2024},
   urldate = {2024-02-02}
}

@online{AzurePipeAndFilt,
   author = {Microsoft},
   title = {Pipes and Filters pattern - Azure Architecture Center, Microsoft Learn},
   url = {https://learn.microsoft.com/en-us/azure/architecture/patterns/pipes-and-filters},
   year = {2024},
   urldate = {2024-02-02}
}

@online{SpringPipes,
   author = {Spring},
   title = {3. Spring Integration Overview},
   url = {https://docs.spring.io/spring-integration/docs/4.2.5.RELEASE/reference/html/overview.html},
   year = {2024},
   urldate = {2024-02-02}
}


@online{AWSPipes,
   title = {Application integration patterns for microservices: Orchestration and coordination, AWS Compute Blog},
   url = {https://aws.amazon.com/blogs/compute/application-integration-patterns-for-microservices-orchestration-and-coordination/},
   year = {2024},
   urldate = {2024-02-02},
   author = { James Beswick},
}

@online{CamelPipes,
   author = {Apache Software Foundation},
   title = {Pipeline :: Apache Camel},
   url = {https://camel.apache.org/components/4.0.x/eips/pipeline-eip.html},
   year = {2024},
   urldate = {2024-02-02}
}


@article{DannRitter2017,
   abstract = {The growing number of (cloud) applications and devices massively increases the communication rate and volume pushing integration systems to their (throughput) limits. While the usage of modern hardware like Field Programmable Gate Arrays (FPGAs) led to low latency when employed for query and event processing, application integration adds yet unexplored processing opportunities. In this industry paper, we explore how to program integration semantics (e. g., message routing and transformation) in form of Enterprise Integration Patterns (EIP) on top of an FPGA, thus complementing the existing research on FPGA data processing. We focus on message routing, re-define the EIP for stream processing and propose modular hardware implementations as templates that are synthesized to circuits. For our real-world "connected car" scenario (i. e., composed patterns), we discuss common and new optimizations especially relevant for hardware integration processes. Our experimental evaluation shows competitive throughput compared to modern general-purpose CPUs and discusses the results.},
   author = {Daniel Ritter and Jonas Dann and Norman May and Stefanie Rinderle-Ma},
   doi = {10.1145/3093742.3093911},
   isbn = {9781450350655},
   journal = {DEBS 2017 - Proceedings of the 11th ACM International Conference on Distributed Event-Based Systems},
   pages = {215-226},
   publisher = {Association for Computing Machinery, Inc},
   title = {Industry paper: Hardware accelerated application integration processing},
   volume = {12},
   year = {2017},
}


@online{conversationPatterns,
   author = {Gregor Hohpe},
   title = {Overview - Enterprise Integration Patterns 2},
   url = {https://www.enterpriseintegrationpatterns.com/patterns/conversation/index.html},
   year = {2017},
   urldate = {2024-03-02}
}

@book{Gamma1994,
   author = {Erich Gamma and Richard Helm and Ralph Johnson and John Vlissides},
   isbn = {0-201-63361-2},
   journal = {Design},
   pages = {139ff},
   publisher = {Addison Wesley},
   title = {Design Patterns: Elements of Reusable Object-Oriented Software},
   year = {1994},
   urldate = {2024-04-20}
}

@online{OSImodel,
   author = {ISO},
   title = {ISO/IEC 7498-1:1994 - Information technology — Open Systems Interconnection — Basic Reference Model: The Basic Model},
   url = {https://www.iso.org/standard/20269.html},
}

@online{HohpeLoanAWS,
   title = {Loan Broker Implementation with AWS Step Functions - Enterprise Integration Patterns},
   url = {https://www.enterpriseintegrationpatterns.com/ramblings/loanbroker_stepfunctions.html},
   author = {Gregor Hohpe},
   year = {2021},
   urldate = {2024-05-03}
}

@online{HohpeLoanGCP,
   title = {Serverless Loan Broker @ GCP - Enterprise Integration Patterns},
   url = {https://www.enterpriseintegrationpatterns.com/ramblings/loanbroker_gcp_workflows.html},
   author = {Gregor Hohpe},
   year = {2022},
   urldate = {2024-05-03}
}

@online{HohpeEIPGCP,
   title = {Serverless Integration Patterns on Google Cloud Functions - Enterprise Integration Patterns},
   url = {https://www.enterpriseintegrationpatterns.com/ramblings/google_cloud_functions.html},
   author = {Gregor Hohpe},
   year = {2017},
   urldate = {2024-05-03}
}

@online{HohpeLoanAWS_4,
   title = {Serverless Loan Broker @ AWS, Part 4: Automation - Enterprise Integration Patterns},
   url = {https://www.enterpriseintegrationpatterns.com/ramblings/loanbroker_automation.html},
   author = {Gregor Hohpe},
   year = {2021},
   urldate = {2024-05-03}
}

@online{HohpeLoanAWS_5,
   title = {Serverless Loan Broker @ AWS, Part 5: Integration Patterns with CDK - Enterprise Integration Patterns},
   url = {https://www.enterpriseintegrationpatterns.com/ramblings/loanbroker_cdk.html},
   author = {Gregor Hohpe},
   year = {2022},
   urldate = {2024-05-03}
}

@online{HohpeModernExamples,
   title = {Modern Examples for Enterprise Integration Patterns - Enterprise Integration Patterns},
   url = {https://www.enterpriseintegrationpatterns.com/ramblings/eip1_examples_updated.html},
   author = {Gregor Hohpe},
   year = {2017},
   urldate = {2024-05-03}
}

@online{EIPModernGit,
   title = {GitHub - spac3lord/eip: Code for modern EIP examples},
   url = {https://github.com/spac3lord/eip},
   author = {Gregor Hohpe and Bobby Woolf},
   year = {2023},
   urldate = {2024-05-04}
}

@article{Barros2005,
   abstract = {With increased sophistication and standardization of modeling languages and execution platforms supporting business process management (BPM) across traditional boundaries, has come the need for consolidated insights into their exploitation from a business...},
   author = {Alistair Barros and Marion Dumas and Arthur H.M. Ter Hofstede},
   doi = {10.1007/11538394_20},
   isbn = {978-3-540-31929-0},
   issn = {1611-3349},
   journal = {Lecture Notes in Computer Science},
   pages = {302-318},
   publisher = {Springer, Berlin, Heidelberg},
   title = {Service Interaction Patterns},
   volume = {3649},
   year = {2005},
}


@book{WilkesPareek,
   title = {Streaming Integration [Book]},
   author = {Steve Wilkes and Alok Pareek},
   url = {https://www.oreilly.com/library/view/streaming-integration/9781492045823/},
   year = {2020},
   isbn = {9781492045816},
   publisher = {O'Reilly Media, Inc},
}

@online{WSO2Stream,
   author = {WSO2},
   title = {Streaming Integration Overview - WSO2 Enterprise Integrator Documentation},
   url = {https://ei.docs.wso2.com/en/7.0.0/streaming-integrator/quick-start-guide/getting-started/getting-started-guide-overview/},
   urldate = {2024-05-18}
}

@online{IBMStream,
   author = {IBM},
   title = {Enterprise Integration: What It Is and Why It’s Important - IBM Blog},
   url = {https://www.ibm.com/blog/enterprise-integration/},
   urldate = {2024-05-18},
   year = {2021},
}

@article{Bousdekis2021,
   abstract = {Traditional manufacturing businesses lack the standards, skills, processes, and technologies to meet today's challenges of Industry 4.0 driven by an interconnected world. Enterprise Integration and Interoperability can ensure efficient communication among various services driven by big data. However, the data management challenges affect not only the technical implementation of software solutions but the function of the whole organization. In this paper, we bring together Enterprise Integration and Interoperability, Big Data Processing, and Industry 4.0 in order to identify synergies that have the potential to enable the so-called “Fourth Industrial Revolution.” On this basis, we propose an architectural framework for designing and modeling Industry 4.0 solutions for big data-driven manufacturing operations. We demonstrate the applicability of the proposed framework through its instantiation to predictive maintenance, a manufacturing function that increasingly concerns manufacturers due to the high costs, safety issues, and complexity of its application.},
   author = {Alexandros Bousdekis and Gregoris Mentzas},
   doi = {10.3389/FDATA.2021.644651/BIBTEX},
   issn = {2624909X},
   journal = {Frontiers in Big Data},
   keywords = {conceptual modeling,data analytics,data management,enterprise architecture,predictive maintenance,smart manufacturing},
   pages = {644651},
   publisher = {Frontiers Media S.A.},
   title = {Enterprise Integration and Interoperability for Big Data-Driven Processes in the Frame of Industry 4.0},
   volume = {4},
   year = {2021},
}

@article{Fahland2013,
   abstract = {Enterprise Integration Patterns allow us to design a middleware system conceptually before actually implementing it. So far, the in-depth analysis of such a design was not feasible, as these patterns are only described informally. We introduce a...},
   author = {Dirk Fahland and Christian Gierds},
   doi = {10.1007/978-3-642-38709-8_26},
   isbn = {978-3-642-38709-8},
   issn = {1611-3349},
   journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
   keywords = {Coloured Petri nets,Enterprise Integration Patterns,analysis,integration,middleware,synthesis},
   pages = {400-416},
   publisher = {Springer, Berlin, Heidelberg},
   title = {Analyzing and Completing Middleware Designs for Enterprise Integration Using Coloured Petri Nets},
   volume = {7908 LNCS},
   year = {2013},
}

@article{Ritter2021,
   abstract = {Enterprise Application Integration (EAI) constitutes the cornerstone in enterprise IT landscapes that are characterized by heterogeneity and distribution. Starting from established Enterprise Integration Patterns (EIPs) such as Content-based Router and Aggregator, EIP compositions are built to describe, implement, and execute integration scenarios. The EIPs and their compositions must be correct at design and runtime in order to avoid functional errors or incomplete functionalities. However, current EAI system vendors use many of the EIPs as part of their proprietary integration scenario modeling languages that are not grounded on any formalism. This renders correctness guarantees for EIPs and their composition impossible. Thus this work advocates responsible EAI based on the formalization, implementation, and correctness of EIPs. For this, requirements on an EIP formalization are collected and based on these requirements an extension of db-net, i.e., timed db-net, is proposed, fully equipped with execution semantics. It is shown how EIPs can be realized based on timed db-nets and how the correctness of these realizations can be shown. Moreover, the simulation of EIP realizations based on timed db-nets is enabled which is essential for later implementation. The concepts are evaluated in many ways, including a proof-of-concept implementation and case studies. The EIP formalization based on timed db-nets constitutes the first step towards responsible EAI.},
   author = {Daniel Ritter and Stefanie Rinderle-Ma and Marco Montali and Andrey Rivkin},
   doi = {10.1016/J.IS.2019.101439},
   issn = {0306-4379},
   journal = {Information Systems},
   keywords = {Enterprise application integration,Enterprise integration patterns,Petri nets,Responsible programming,Trustworthy application integration},
   pages = {101439},
   publisher = {Pergamon},
   title = {Formal foundations for responsible application integration},
   volume = {101},
   year = {2021},
}

@article{Montali2017,
   abstract = {The integrated management of business processes and master data is being increasingly considered as a fundamental problem, by both the academia and the industry. In this position paper, we focus on the foundations of the problem, arguing that contemporary approaches struggle to find a suitable equilibrium between data- and process-related aspects. We then propose a new formal model, called db-nets, that balances such two pillars through the marriage of colored Petri nets and relational databases. We invite the research community to build on this new model, discussing in particular its potential in conceptual modeling, formal verification, and simulation.},
   author = {Marco Montali and Andrey Rivkin},
   doi = {10.1007/978-3-662-55862-1_5/FIGURES/5},
   isbn = {9783662558614},
   issn = {16113349},
   journal = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
   pages = {91-118},
   publisher = {Springer Verlag},
   title = {DB-nets: On the marriage of colored petri nets and relational databases},
   volume = {10470 LNCS},
   year = {2017},
}

@article{ExceptionRitter2016,
   abstract = {Enterprise Integration Patterns (EIP) are a collection of widely used patterns for integrating enterprise applications and business processes. These patterns represent a “de-facto” standard for des...},
   author = {Daniel Ritter and Jan Sosulski},
   doi = {10.1142/S0218843016500040},
   issn = {02188430},
   issue = {2},
   keywords = {Business process model and notation (BPMN),enterprise integration patterns,exception handling,message-based integration},
   publisher = { World Scientific Publishing Company },
   title = {Exception Handling in Message-Based Integration Systems and Modeling Using BPMN},
   volume = {25},
   year = {2016},
}


@article{ExceptionRitter2014,
   abstract = {Enterprise Integration Patterns (EIP) are a collection of widely used patterns for integrating enterprise applications and business processes. These patterns represent a 'de-facto' standard for design decisions when integrating enterprise applications. In previous work, the EIP control and data flow syntax and semantics have been expressed in the Business Process Model and Notation (BPMN) as a semantic model for message-based integration. However, exceptions during message processing were left for further studies. In this work, we specify common exceptional situations in integration systems and derive exception types, for which we define a compliant representation in BPMN, resulting in general patterns for exception handling and compensation. The patterns extend previous work by the Exception Flow, evaluated syntactically and semantically for representative integration scenarios.},
   author = {Daniel Ritter and Jan Sosulski},
   doi = {10.1109/EDOC.2014.13},
   isbn = {9781479954704},
   issn = {15417719},
   issue = {December},
   journal = {Proceedings . IEEE 18th international Enterprise Distributed object computing conference},
   pages = {12-21},
   publisher = {Institute of Electrical and Electronics Engineers Inc.},
   title = {Modeling Exception Flows in Integration Systems},
   volume = {2014-December},
   year = {2014},
}
